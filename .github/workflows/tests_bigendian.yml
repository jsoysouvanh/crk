name: Big Endian Linux

on:
  push:
    branches:
      - bigendian-ci-setup

jobs:
  ubuntu_clang_s390x:
    name: ${{ matrix.distro }} | Clang | ${{ matrix.arch }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        build_config: [Release] #, Debug
        cpp_version: [17] #, 20
        arch: [s390x]
        distro: [ubuntu_latest]

    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          # Speeds up builds by caching container image
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            --volume "${PWD}:/crk_root"

          # Forward matrix variables to the container
          env: |
            build_config: ${{ matrix.build_config }}

          # The shell to run commands with in the container
          shell: /bin/sh

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -q -y

            apt-get install -y software-properties-common lsb-release git ninja-build clang++-12
            
            apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6AF7F09730B3F0A4
            wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
            apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
            apt-get update -y
            apt-get install -y cmake

          run: |
            cd /crk_root

            cmake --list-presets=all
            cmake --preset="Clang" -DCRK_MIN_CXX_STD_VERSION=17 -DCRK_DEV=1
            cmake --build --preset="Clang ${build_config}"
            ctest --preset="Clang ${build_config}"